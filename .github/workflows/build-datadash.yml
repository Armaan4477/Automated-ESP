name: Build ESP

on:
  push:
    branches:
      - main

jobs:
  build-macos-x64:
    runs-on: macos-13
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip3 install -r Desktop-app/requirements.txt
          pip3 install pyinstaller

      - name: Build for macOS
        run: |
          cd Desktop-app
          pyinstaller --windowed \
          --name="ESP" \
          main.py

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          cd Desktop-app/dist
          create-dmg \
            --volname "ESP" \
            --window-pos 200 120 \
            --window-size 400 400 \
            --icon-size 128 \
            --icon "ESP.app" 100 150 \
            --app-drop-link 300 150 \
            --no-internet-enable \
            "ESP(macos-x64).dmg" \
            "ESP.app"

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: ESP-macOS-x64
          path: Desktop-app/dist/ESP(macos-x64).dmg

  build-macos-arm:
    runs-on: macos-15
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip3 install -r Desktop-app/requirements.txt --break-system-packages
          pip3 install pyinstaller --break-system-packages

      - name: Build for macOS
        run: |
          cd Desktop-app
          pyinstaller --windowed \
          --name="ESP" \
          main.py

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          cd Desktop-app/dist
          create-dmg \
            --volname "ESP" \
            --window-pos 200 120 \
            --window-size 400 400 \
            --icon-size 128 \
            --icon "ESP.app" 100 150 \
            --app-drop-link 300 150 \
            --no-internet-enable \
            "ESP(macos-arm).dmg" \
            "ESP.app"

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: ESP-macOS-arm
          path: Desktop-app/dist/ESP(macos-arm).dmg
     
  build-linux-x64:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install -r Desktop-app/requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Clean previous builds
        run: |
          rm -rf Desktop-app/build Desktop-app/dist Desktop-app/ESP\(linux\ x64\)

      - name: Build for Linux x64
        run: |
          cd Desktop-app
          pyinstaller --onefile --clean --name=ESP main.py
          mv dist/ESP "../ESP(linux x64)"

      - name: Upload Linux x64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ESP(linux x64)
          path: ESP\(linux\ x64\)

  build-linux-arm:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Docker and QEMU for ARM emulation
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build for Linux ARM using Docker
        run: |
          docker run --rm -v "${{ github.workspace }}:/workspace" -w /workspace/Desktop-app \
            --platform linux/arm64 python:3.13 bash -c "
              pip install pyinstaller && pip install -r requirements.txt &&
              pyinstaller --onefile  --name=ESP main.py &&
              mv dist/ESP '/workspace/Desktop-app/ESP(linux arm)'"

      - name: Upload Linux ARM artifact
        uses: actions/upload-artifact@v4
        with:
          name: ESP(linux arm)
          path: Desktop-app/ESP(linux arm)

  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install -r Desktop-app/requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build for Windows x64
        run: |
          cd Desktop-app
          & pyinstaller --onefile --windowed --name="ESP" main.py


      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: ESP(windows x64)
          path: Desktop-app/dist/ESP.exe